<template>
    <div>
        <!-- 搜索表单 -->
        <el-form v-if="tableData.search_cols && Object.keys(tableData.search_cols).length > 0" :model="searchForm"
            inline>
            <el-form-item v-for="(col, key) in tableData.search_cols" :key="key" :label="col.vi_name">
                <!-- 日期选择器 -->
                <template v-if="FieldTypeChecker.isDateField(col)">
                    <el-date-picker :type="'datetimerange'"
                        :format="`YYYY-MM-DD ${col.my_column_type == 'date' ? '' : 'HH:mm:ss'}`"
                        :value-format="`YYYY-MM-DD ${col.my_column_type == 'date' ? '' : 'HH:mm:ss'}`"
                        range-separator="-" start-placeholder="开始时间" end-placeholder="结束时间" v-model="searchForm[key]" />
                </template>
                <!-- 下拉选择框 -->
                <template v-else-if="FieldTypeChecker.isSelectField(col)">
                    <el-form-item>
                        <el-select class="w-26!" v-model="searchForm[key]" placeholder="不限" clearable>
                            <el-option v-if="col.relative_list"
                                v-for="(item, index) in Object.entries(col.relative_list)" :key="item[0]"
                                :label="item[1]" :value="item[0]" />
                        </el-select>
                    </el-form-item>
                </template>
                <!-- 输入框 -->
                <template v-else-if="FieldTypeChecker.isInputField(col)">
                    <el-input v-model="searchForm[key]" placeholder="请输入" />
                </template>
                <!-- 弹框选择 -->
                <template v-else-if="FieldTypeChecker.isPopupField(col)">
                    <div class="flex w-42" @click="serchDialogVisible = true">
                        <el-input v-model="searchForm[key]" placeholder="请选择">
                            <template #append>
                                <el-button type="primary">选择</el-button>
                            </template>
                        </el-input>
                    </div>
                </template>

                <template v-else>
                    <el-input v-model="searchForm[key]" placeholder="请输入" />
                </template>
            </el-form-item>

            <el-form-item>
                <el-button @click="handleReset">重置</el-button>
                <el-button type="primary" @click="handleSearch">搜索</el-button>
            </el-form-item>
        </el-form>

        <!-- 表格 -->
        <el-table v-if="tableData?.rows.length" :data="tableData.rows" style="width: 100%" border max-height="720"
            @selection-change="handleSelectionChange">
            <!-- 复选框:根据tableData.table_cmds里是否有cmd_type == 1的 进行条件渲染 -->
            <el-table-column type="selection" width="50" v-if="tableData.table_cmds.some(item =>
                item.cmd_type == 1 ||
                item.cmd_type == 8 ||
                item?.class == 'coding-ajax-batch-checked-download' ||
                item?.class == 'coding-ajax-delete-batch')" />
            <el-table-column v-for="(item, index) in Object.values(tableData.cols_show)" :key="index"
                :prop="item.my_column_name" :label="item.vi_name" :sortable="!!item.sortable">
                <template #default="scope">
                    <div style="display: flex; align-items: center">
                        <span v-if="FieldTypeChecker.isSelectField(item)">
                            {{
                                tableData.cols_show[item.my_column_name].relative_list[scope.row[item.my_column_name]]
                            }}
                        </span>
                        <el-avatar v-else-if="item.my_column_name == 'wx_image'" :size="50"
                            :src="getFullImageUrl(scope.row[item.my_column_name])" />
                        <span v-else style="margin-left: 10px">{{ scope.row[item.my_column_name] }}</span>
                    </div>
                </template>
            </el-table-column>
            <!-- 操作栏 -->
            <el-table-column fixed="right" label="操作" width="200">
                <template #default="scope">
                    <el-button :size="'small'" type="primary" @click="handleSelect(scope.row)">选择</el-button>
                </template>
            </el-table-column>
        </el-table>

        <!-- 分页 -->
        <div class="demo-pagination-block mt-8">
            <el-pagination v-model:current-page="currentPage" v-model:page-size="per_page"
                :page-sizes="[10, 50, 100, 200]" background layout="total, sizes, prev, pager, next, jumper"
                :total="tableData.total_rows" @size-change="handleSizeChange" @current-change="handleCurrentChange" />
        </div>
    </div>
</template>

<script lang="ts" setup>
import { ref, computed } from 'vue';
import { FieldTypeChecker, getFullImageUrl } from "@/utils";
import { useRoute } from 'vue-router';
import { useAppStore } from '@/store/modules/app';
import { getTableDataApi } from "@/api/table/tableApi";
import router from "@/router";
import {
    ElTable,
    ElTableColumn,
    ElPagination,
    ElButton,
    ElForm,
    ElFormItem,
    ElInput,
    ElDatePicker,
    ElSelect,
    ElOption,
    ElRow,
    ElCol,
    ElDivider,
    ElDialog,
    ElAvatar,
    ElMessage,
    ElMessageBox,
    ElEmpty,
    ElPopover,
    ElPopconfirm,
} from 'element-plus';

const route = useRoute();
const appStore = useAppStore();

const offset = ref(0);
const per_page = ref(10);
const currentPage = computed(() => Math.floor(offset.value / per_page.value) + 1);
const searchForm = ref<Record<string, any>>({});
const tableData = ref<TableData>({
    table: undefined,
    all_cols: undefined,
    offset: 0,
    per_page: 0,
    url_search: [],
    table_name: "",
    search_cols: undefined,
    search: [],
    search_data: [],
    cols_show: undefined,
    table_list_cmds: [],
    cols_toggle: [],
    table_cmds: [],
    rows: [],
    total_rows: 0,
    table_cmd_strs: [],
    pagination: "",
    rows_list_search_form: ""
});
const loading = ref(false);
const multipleSelection = ref<any[]>([]);

getTableData();

async function getTableData() {
    if (!route.query.tName) {
        ElMessage({ message: '没有表名', type: 'warning' });
        return;
    }
    loading.value = true;
    let res = await getTableDataApi(route.query.tName as string, offset.value, per_page.value, searchForm.value);
    tableData.value = res.data;
    loading.value = false;
    router.currentRoute.value.meta.title = tableData.value?.table?.table_name_cn;
}

function handleSelectionChange(val: any[]) {
    multipleSelection.value = val.map(item => item.id);
}

function handleSelect(row: any) {
    ElMessage({ message: `选择了: ${row.id}`, type: 'success' });
}

function handleSearch() {
    offset.value = 0;
    getTableData();
}

function handleReset() {
    searchForm.value = {};
    handleSearch();
}

function handleSizeChange(size: number) {
    per_page.value = size;
    getTableData();
}

function handleCurrentChange(page: number) {
    offset.value = (page - 1) * per_page.value;
    getTableData();
}
</script>